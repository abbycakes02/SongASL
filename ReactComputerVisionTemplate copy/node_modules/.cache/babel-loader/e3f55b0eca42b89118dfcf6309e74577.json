{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n *  Advanced activation layers.\n */\nimport { clipByValue, elu, leakyRelu, prelu, relu, serialization } from '@tensorflow/tfjs-core';\nimport { Softmax as softmaxActivation } from '../activations';\nimport { cast } from '../backend/tfjs_backend';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nexport class ReLU extends Layer {\n  constructor(args) {\n    super(args == null ? {} : args);\n    this.supportsMasking = true;\n    if (args != null) {\n      this.maxValue = args.maxValue;\n    }\n  }\n  call(inputs, kwargs) {\n    inputs = getExactlyOneTensor(inputs);\n    let output = relu(inputs);\n    if (this.maxValue != null) {\n      output = clipByValue(output, 0, this.maxValue);\n    }\n    return output;\n  }\n  computeOutputShape(inputShape) {\n    return inputShape;\n  }\n  getConfig() {\n    const config = {\n      maxValue: this.maxValue\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n/** @nocollapse */\nReLU.className = 'ReLU';\nserialization.registerClass(ReLU);\nexport class LeakyReLU extends Layer {\n  constructor(args) {\n    super(args == null ? {} : args);\n    this.DEFAULT_ALPHA = 0.3;\n    if (args == null) {\n      args = {};\n    }\n    this.alpha = args.alpha == null ? this.DEFAULT_ALPHA : args.alpha;\n  }\n  call(inputs, kwargs) {\n    const x = getExactlyOneTensor(inputs);\n    return leakyRelu(x, this.alpha);\n  }\n  computeOutputShape(inputShape) {\n    return inputShape;\n  }\n  getConfig() {\n    const config = {\n      alpha: this.alpha\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n/** @nocollapse */\nLeakyReLU.className = 'LeakyReLU';\nserialization.registerClass(LeakyReLU);\nexport class PReLU extends Layer {\n  constructor(args) {\n    super(args == null ? {} : args);\n    this.DEFAULT_ALPHA_INITIALIZER = 'zeros';\n    if (args == null) {\n      args = {};\n    }\n    this.supportsMasking = true;\n    this.alphaInitializer = getInitializer(args.alphaInitializer || this.DEFAULT_ALPHA_INITIALIZER);\n    this.alphaRegularizer = getRegularizer(args.alphaRegularizer);\n    this.alphaConstraint = getConstraint(args.alphaConstraint);\n    if (args.sharedAxes == null) {\n      this.sharedAxes = null;\n    } else if (Array.isArray(args.sharedAxes)) {\n      this.sharedAxes = args.sharedAxes;\n    } else if (typeof args.sharedAxes === 'number') {\n      this.sharedAxes = [args.sharedAxes];\n    } else {\n      throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, ` + `but got ${args.sharedAxes}`);\n    }\n  }\n  build(inputShape) {\n    inputShape = getExactlyOneShape(inputShape);\n    const paramShape = inputShape.slice(1);\n    if (this.sharedAxes != null) {\n      for (const i of this.sharedAxes) {\n        paramShape[i - 1] = 1;\n      }\n    }\n    this.alpha = this.addWeight('alpha', paramShape, 'float32', this.alphaInitializer, this.alphaRegularizer, true, this.alphaConstraint);\n    // Set input spec.\n    const axes = {};\n    if (this.sharedAxes != null) {\n      for (let i = 1; i < inputShape.length; ++i) {\n        axes[i] = inputShape[i];\n      }\n    }\n    this.inputSpec = [new InputSpec({\n      ndim: inputShape.length,\n      axes\n    })];\n    this.built = true;\n  }\n  call(inputs, kwargs) {\n    inputs = getExactlyOneTensor(inputs);\n    return prelu(inputs, this.alpha.read());\n  }\n  getConfig() {\n    const config = {\n      alphaInitializer: serializeInitializer(this.alphaInitializer),\n      alphaRegularizer: serializeRegularizer(this.alphaRegularizer),\n      alphaConstraint: serializeConstraint(this.alphaConstraint),\n      sharedAxes: this.sharedAxes\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n/** @nocollapse */\nPReLU.className = 'PReLU';\nserialization.registerClass(PReLU);\nexport class ELU extends Layer {\n  constructor(args) {\n    super(args == null ? {} : args);\n    this.DEFAULT_ALPHA = 1.0;\n    if (args == null) {\n      args = {};\n    }\n    if (args.alpha != null && args.alpha !== this.DEFAULT_ALPHA) {\n      throw new NotImplementedError(`Non-default alpha value (${args.alpha}) is not supported by the ` + `ELU layer yet.`);\n    }\n    this.alpha = args.alpha == null ? this.DEFAULT_ALPHA : args.alpha;\n  }\n  call(inputs, kwargs) {\n    const x = getExactlyOneTensor(inputs);\n    return elu(x);\n  }\n  computeOutputShape(inputShape) {\n    return inputShape;\n  }\n  getConfig() {\n    const config = {\n      alpha: this.alpha\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n/** @nocollapse */\nELU.className = 'ELU';\nserialization.registerClass(ELU);\nexport class ThresholdedReLU extends Layer {\n  constructor(args) {\n    super(args == null ? {} : args);\n    this.DEFAULT_THETA = 1.0;\n    if (args == null) {\n      args = {};\n    }\n    this.theta = args.theta == null ? this.DEFAULT_THETA : args.theta;\n  }\n  call(inputs, kwargs) {\n    const x = getExactlyOneTensor(inputs);\n    return x.mul(cast(x.greater(this.theta), 'float32'));\n  }\n  computeOutputShape(inputShape) {\n    return inputShape;\n  }\n  getConfig() {\n    const config = {\n      theta: this.theta\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n/** @nocollapse */\nThresholdedReLU.className = 'ThresholdedReLU';\nserialization.registerClass(ThresholdedReLU);\nexport class Softmax extends Layer {\n  constructor(args) {\n    super(args == null ? {} : args);\n    this.DEFAULT_AXIS = 1.0;\n    if (args == null) {\n      args = {};\n    }\n    this.softmax = new softmaxActivation().apply;\n    this.axis = args.axis == null ? this.DEFAULT_AXIS : args.axis;\n  }\n  call(inputs, kwargs) {\n    const x = getExactlyOneTensor(inputs);\n    return this.softmax(x, this.axis);\n  }\n  computeOutputShape(inputShape) {\n    return inputShape;\n  }\n  getConfig() {\n    const config = {\n      axis: this.axis\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n/** @nocollapse */\nSoftmax.className = 'Softmax';\nserialization.registerClass(Softmax);","map":{"version":3,"names":["clipByValue","elu","leakyRelu","prelu","relu","serialization","Softmax","softmaxActivation","cast","getConstraint","serializeConstraint","InputSpec","Layer","NotImplementedError","ValueError","getInitializer","serializeInitializer","getRegularizer","serializeRegularizer","getExactlyOneShape","getExactlyOneTensor","ReLU","constructor","args","supportsMasking","maxValue","call","inputs","kwargs","output","computeOutputShape","inputShape","getConfig","config","baseConfig","Object","assign","className","registerClass","LeakyReLU","DEFAULT_ALPHA","alpha","x","PReLU","DEFAULT_ALPHA_INITIALIZER","alphaInitializer","alphaRegularizer","alphaConstraint","sharedAxes","Array","isArray","build","paramShape","slice","i","addWeight","axes","length","inputSpec","ndim","built","read","ELU","ThresholdedReLU","DEFAULT_THETA","theta","mul","greater","DEFAULT_AXIS","softmax","apply","axis"],"sources":["../../src/layers/advanced_activations.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}