{"ast":null,"code":"import { convertToTensor } from '../tensor_util_env';\nimport { conv2DBackpropInput } from './conv2d_backprop_input';\nimport { op } from './operation';\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n  const $x = convertToTensor(x, 'x', 'conv2dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n  return conv2DBackpropInput(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\nexport const conv2dTranspose = op({\n  conv2dTranspose_\n});","map":{"version":3,"names":["convertToTensor","conv2DBackpropInput","op","conv2dTranspose_","x","filter","outputShape","strides","pad","dimRoundingMode","$x","$filter","conv2dTranspose"],"sources":["../../src/ops/conv2d_transpose.ts"],"sourcesContent":[null],"mappings":"AAiBA,SAAQA,eAAe,QAAO,oBAAoB;AAGlD,SAAQC,mBAAmB,QAAO,yBAAyB;AAC3D,SAAQC,EAAE,QAAO,aAAa;AAE9B;;;;;;;;;;;;;;;;;;;;AAoBA,SAASC,gBAAgBA,CACrBC,CAAe,EAAEC,MAA2B,EAC5CC,WAAsE,EACtEC,OAAgC,EAAEC,GAA0B,EAC5DC,eAAwC;EAC1C,MAAMC,EAAE,GAAGV,eAAe,CAACI,CAAC,EAAE,GAAG,EAAE,iBAAiB,CAAC;EACrD,MAAMO,OAAO,GAAGX,eAAe,CAACK,MAAM,EAAE,QAAQ,EAAE,iBAAiB,CAAC;EAEpE,OAAOJ,mBAAmB,CACtBK,WAAW,EAAEI,EAAE,EAAEC,OAAO,EAAEJ,OAAO,EAAEC,GAAG,EAAE,MAAM,EAAEC,eAAe,CAAC;AACtE;AAEA,OAAO,MAAMG,eAAe,GAAGV,EAAE,CAAC;EAACC;AAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}