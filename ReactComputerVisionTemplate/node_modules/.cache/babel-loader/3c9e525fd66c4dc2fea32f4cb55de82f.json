{"ast":null,"code":"// Define our labelmap\nconst labelMap = {\n  1: {\n    name: 'Hello',\n    color: 'red'\n  },\n  2: {\n    name: 'Thank You',\n    color: 'yellow'\n  },\n  3: {\n    name: 'I Love You',\n    color: 'lime'\n  },\n  4: {\n    name: 'Yes',\n    color: 'blue'\n  },\n  5: {\n    name: 'No',\n    color: 'purple'\n  }\n};\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx) => {\n  for (let i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      // Extract variables\n      const [y, x, height, width] = boxes[i];\n      const text = classes[i];\n\n      // Set styling\n      ctx.strokeStyle = labelMap[text]['color'];\n      ctx.lineWidth = 10;\n      ctx.fillStyle = 'white';\n      ctx.font = '30px Arial';\n\n      // DRAW!!\n      ctx.beginPath();\n      ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10);\n      ctx.rect(x * imgWidth, y * imgHeight, width * imgWidth / 2, height * imgHeight / 1.5);\n      ctx.stroke();\n    }\n  }\n};","map":{"version":3,"names":["labelMap","name","color","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke"],"sources":["/Users/abbykaur/RealTimeSignLanguageDetectionwithTFJS/ReactComputerVisionTemplate/src/utilities.js"],"sourcesContent":["// Define our labelmap\nconst labelMap = {\n    1:{name:'Hello', color:'red'},\n    2:{name:'Thank You', color:'yellow'},\n    3:{name:'I Love You', color:'lime'},\n    4:{name:'Yes', color:'blue'},\n    5:{name:'No', color:'purple'},\n}\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n            \n            // Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.lineWidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'         \n            \n            // DRAW!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n        }\n    }\n}"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;EACb,CAAC,EAAC;IAACC,IAAI,EAAC,OAAO;IAAEC,KAAK,EAAC;EAAK,CAAC;EAC7B,CAAC,EAAC;IAACD,IAAI,EAAC,WAAW;IAAEC,KAAK,EAAC;EAAQ,CAAC;EACpC,CAAC,EAAC;IAACD,IAAI,EAAC,YAAY;IAAEC,KAAK,EAAC;EAAM,CAAC;EACnC,CAAC,EAAC;IAACD,IAAI,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAM,CAAC;EAC5B,CAAC,EAAC;IAACD,IAAI,EAAC,IAAI;IAAEC,KAAK,EAAC;EAAQ;AAChC,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,KAAG;EACnF,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAEP,KAAK,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAC;IAC9B,IAAGP,KAAK,CAACO,CAAC,CAAC,IAAIN,OAAO,CAACM,CAAC,CAAC,IAAIL,MAAM,CAACK,CAAC,CAAC,GAACJ,SAAS,EAAC;MAC7C;MACA,MAAM,CAACM,CAAC,EAACC,CAAC,EAACC,MAAM,EAACC,KAAK,CAAC,GAAGZ,KAAK,CAACO,CAAC,CAAC;MACnC,MAAMM,IAAI,GAAGZ,OAAO,CAACM,CAAC,CAAC;;MAEvB;MACAD,GAAG,CAACQ,WAAW,GAAGlB,QAAQ,CAACiB,IAAI,CAAC,CAAC,OAAO,CAAC;MACzCP,GAAG,CAACS,SAAS,GAAG,EAAE;MAClBT,GAAG,CAACU,SAAS,GAAG,OAAO;MACvBV,GAAG,CAACW,IAAI,GAAG,YAAY;;MAEvB;MACAX,GAAG,CAACY,SAAS,CAAC,CAAC;MACfZ,GAAG,CAACa,QAAQ,CAACvB,QAAQ,CAACiB,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,GAAGO,IAAI,CAACC,KAAK,CAACnB,MAAM,CAACK,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,GAAG,EAAEG,CAAC,GAACN,QAAQ,EAAEK,CAAC,GAACJ,SAAS,GAAC,EAAE,CAAC;MACxGC,GAAG,CAACgB,IAAI,CAACZ,CAAC,GAACN,QAAQ,EAAEK,CAAC,GAACJ,SAAS,EAAEO,KAAK,GAACR,QAAQ,GAAC,CAAC,EAAEO,MAAM,GAACN,SAAS,GAAC,GAAG,CAAC;MACzEC,GAAG,CAACiB,MAAM,CAAC,CAAC;IAChB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module"}