{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context) => {\n  switch (node.op) {\n    case 'Max':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.max(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'Mean':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.mean(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'Min':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.min(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'Sum':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.sum(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'All':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.all(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'Any':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.any(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'ArgMax':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        return [tfOps.argMax(getParamValue('x', node, tensorMap, context), axis)];\n      }\n    case 'ArgMin':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        return [tfOps.argMin(getParamValue('x', node, tensorMap, context), axis)];\n      }\n    case 'Prod':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const keepDims = getParamValue('keepDims', node, tensorMap, context);\n        return [tfOps.prod(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n      }\n    case 'Cumsum':\n      {\n        const axis = getParamValue('axis', node, tensorMap, context);\n        const exclusive = getParamValue('exclusive', node, tensorMap, context);\n        const reverse = getParamValue('reverse', node, tensorMap, context);\n        return [tfOps.cumsum(getParamValue('x', node, tensorMap, context), axis, exclusive, reverse)];\n      }\n    case 'Bincount':\n      const x = getParamValue('x', node, tensorMap, context);\n      const weights = getParamValue('weights', node, tensorMap, context);\n      const size = getParamValue('size', node, tensorMap, context);\n      return [tfOps.bincount(x, weights, size)];\n    case 'DenseBincount':\n      {\n        const x = getParamValue('x', node, tensorMap, context);\n        const weights = getParamValue('weights', node, tensorMap, context);\n        const size = getParamValue('size', node, tensorMap, context);\n        const binaryOutput = getParamValue('binaryOutput', node, tensorMap, context);\n        return [tfOps.denseBincount(x, weights, size, binaryOutput)];\n      }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\nexport const CATEGORY = 'reduction';","map":{"version":3,"names":["tfOps","getParamValue","executeOp","node","tensorMap","context","op","axis","keepDims","max","mean","min","sum","all","any","argMax","argMin","prod","exclusive","reverse","cumsum","x","weights","size","bincount","binaryOutput","denseBincount","TypeError","CATEGORY"],"sources":["../../../src/operations/executors/reduction_executor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}