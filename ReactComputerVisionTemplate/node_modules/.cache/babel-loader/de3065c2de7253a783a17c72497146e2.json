{"ast":null,"code":"import { convertToTensor } from '../tensor_util_env';\nimport { conv3DBackpropInput } from './conv3d_backprop_input';\nimport { op } from './operation';\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n  const $x = convertToTensor(x, 'x', 'conv3dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv3dTranspose');\n  return conv3DBackpropInput(outputShape, $x, $filter, strides, pad);\n}\nexport const conv3dTranspose = op({\n  conv3dTranspose_\n});","map":{"version":3,"names":["convertToTensor","conv3DBackpropInput","op","conv3dTranspose_","x","filter","outputShape","strides","pad","$x","$filter","conv3dTranspose"],"sources":["../../src/ops/conv3d_transpose.ts"],"sourcesContent":[null],"mappings":"AAiBA,SAAQA,eAAe,QAAO,oBAAoB;AAGlD,SAAQC,mBAAmB,QAAO,yBAAyB;AAC3D,SAAQC,EAAE,QAAO,aAAa;AAE9B;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,gBAAgBA,CACrBC,CAAe,EAAEC,MAA2B,EAC5CC,WAE6C,EAC7CC,OAAwC,EAAEC,GAAmB;EAC/D,MAAMC,EAAE,GAAGT,eAAe,CAACI,CAAC,EAAE,GAAG,EAAE,iBAAiB,CAAC;EACrD,MAAMM,OAAO,GAAGV,eAAe,CAACK,MAAM,EAAE,QAAQ,EAAE,iBAAiB,CAAC;EAEpE,OAAOJ,mBAAmB,CAACK,WAAW,EAAEG,EAAE,EAAEC,OAAO,EAAEH,OAAO,EAAEC,GAAG,CAAC;AACpE;AAEA,OAAO,MAAMG,eAAe,GAAGT,EAAE,CAAC;EAACC;AAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}