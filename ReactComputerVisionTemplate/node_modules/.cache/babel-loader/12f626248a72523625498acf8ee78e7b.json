{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue, getTensor } from './utils';\nexport const executeOp = (node, tensorMap, context) => {\n  switch (node.op) {\n    case 'Abs':\n    case 'ComplexAbs':\n      return [tfOps.abs(getParamValue('x', node, tensorMap, context))];\n    case 'Acos':\n      return [tfOps.acos(getParamValue('x', node, tensorMap, context))];\n    case 'Acosh':\n      return [tfOps.acosh(getParamValue('x', node, tensorMap, context))];\n    case 'Asin':\n      return [tfOps.asin(getParamValue('x', node, tensorMap, context))];\n    case 'Asinh':\n      return [tfOps.asinh(getParamValue('x', node, tensorMap, context))];\n    case 'Atan':\n      return [tfOps.atan(getParamValue('x', node, tensorMap, context))];\n    case 'Atan2':\n      return [tfOps.atan2(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context))];\n    case 'Atanh':\n      return [tfOps.atanh(getParamValue('x', node, tensorMap, context))];\n    case 'Ceil':\n      return [tfOps.ceil(getParamValue('x', node, tensorMap, context))];\n    case 'Complex':\n      return [tfOps.complex(getParamValue('real', node, tensorMap, context), getParamValue('imag', node, tensorMap, context))];\n    case 'Cos':\n      return [tfOps.cos(getParamValue('x', node, tensorMap, context))];\n    case 'Cosh':\n      return [tfOps.cosh(getParamValue('x', node, tensorMap, context))];\n    case 'Elu':\n      return [tfOps.elu(getParamValue('x', node, tensorMap, context))];\n    case 'Erf':\n      return [tfOps.erf(getParamValue('x', node, tensorMap, context))];\n    case 'Exp':\n      return [tfOps.exp(getParamValue('x', node, tensorMap, context))];\n    case 'Expm1':\n      {\n        return [tfOps.expm1(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Floor':\n      return [tfOps.floor(getParamValue('x', node, tensorMap, context))];\n    case 'Log':\n      return [tfOps.log(getParamValue('x', node, tensorMap, context))];\n    case 'Log1p':\n      {\n        return [tfOps.log1p(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Imag':\n      return [tfOps.imag(getParamValue('x', node, tensorMap, context))];\n    case 'Neg':\n      return [tfOps.neg(getParamValue('x', node, tensorMap, context))];\n    case 'Reciprocal':\n      {\n        return [tfOps.reciprocal(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Real':\n      return [tfOps.real(getParamValue('x', node, tensorMap, context))];\n    case 'Relu':\n      return [tfOps.relu(getParamValue('x', node, tensorMap, context))];\n    case 'Round':\n      {\n        return [tfOps.round(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Selu':\n      return [tfOps.selu(getParamValue('x', node, tensorMap, context))];\n    case 'Sigmoid':\n      return [tfOps.sigmoid(getParamValue('x', node, tensorMap, context))];\n    case 'Sin':\n      return [tfOps.sin(getParamValue('x', node, tensorMap, context))];\n    case 'Sign':\n      {\n        return [tfOps.sign(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Sinh':\n      {\n        return [tfOps.sinh(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Softplus':\n      {\n        return [tfOps.softplus(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Sqrt':\n      {\n        return [tfOps.sqrt(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Square':\n      {\n        return [tfOps.square(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Tanh':\n      {\n        return [tfOps.tanh(getParamValue('x', node, tensorMap, context))];\n      }\n    case 'Tan':\n      return [tfOps.tan(getParamValue('x', node, tensorMap, context))];\n    case 'ClipByValue':\n      return [tfOps.clipByValue(getParamValue('x', node, tensorMap, context), getParamValue('clipValueMin', node, tensorMap, context), getParamValue('clipValueMax', node, tensorMap, context))];\n    case 'Relu6':\n      return [tfOps.relu6(getParamValue('x', node, tensorMap, context))];\n    case 'Rsqrt':\n      return [tfOps.rsqrt(getTensor(node.inputNames[0], tensorMap, context))];\n    case 'Prod':\n      return [tfOps.prod(getParamValue('x', node, tensorMap, context), getParamValue('axes', node, tensorMap, context))];\n    case 'LeakyRelu':\n      return [tfOps.leakyRelu(getParamValue('x', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context))];\n    case 'Prelu':\n      return [tfOps.prelu(getParamValue('x', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context))];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\nexport const CATEGORY = 'basic_math';","map":{"version":3,"names":["tfOps","getParamValue","getTensor","executeOp","node","tensorMap","context","op","abs","acos","acosh","asin","asinh","atan","atan2","atanh","ceil","complex","cos","cosh","elu","erf","exp","expm1","floor","log","log1p","imag","neg","reciprocal","real","relu","round","selu","sigmoid","sin","sign","sinh","softplus","sqrt","square","tanh","tan","clipByValue","relu6","rsqrt","inputNames","prod","leakyRelu","prelu","TypeError","CATEGORY"],"sources":["../../../src/operations/executors/basic_math_executor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}